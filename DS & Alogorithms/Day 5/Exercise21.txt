#DSA-Exer-21

def merge_sort(num_list):
    # Remove pass and write the logic here to return the sorted list
    low = 0
    high = len(num_list)-1
    
    if low == high:
        return num_list
    else:
        mid = (low+high)//2
        left_list = merge_sort(num_list[:mid+1])
        right_list = merge_sort(num_list[mid+1:])
        merge_list = merge(left_list, right_list)
        return merge_list

def merge(left_list,right_list):
    # Remove pass and write the logic to merge the elements in the left_list and right_list and return the sorted list
    i = j = 0
    lst = []
    
    while i<len(left_list) and j<len(right_list):
        if left_list[i] <= right_list[j]:
            lst.append(left_list[i])
            i += 1
        else:
            lst.append(right_list[j])
            j += 1
            
    if i<len(left_list):
        lst.extend(left_list[i:])
        
    if j<len(right_list):
        lst.extend(right_list[j:])
    
    return lst
            
    

num_list=[34, 67, 8, 19, 2, 23, 1, 91]
print("Before sorting:",num_list)
sorted_list = merge_sort(num_list)
print("After sorting:",sorted_list)
